var idbKeyval=function(){"use strict";let e;function r(){return e||(e=new Promise((e,r)=>{const t=indexedDB.open("keyval-store",1);t.onerror=(()=>r(t.error)),t.onupgradeneeded=(()=>t.result.createObjectStore("keyval")),t.onsuccess=(()=>e(t.result))})),e}async function t(e,t){const n=await r();return new Promise((r,s)=>{const o=n.transaction("keyval",e);o.oncomplete=r,o.onerror=(()=>s(o.error)),t(o.objectStore("keyval"))})}return class{static get(e){return t("readonly",r=>r.get(e)).then(e=>e.result)}static set(e,r){return t("readwrite",t=>t.put(r,e))}static delete(e){return t("readwrite",r=>r.delete(e))}static clear(){return t("readwrite",e=>e.clear())}static keys(){var e=[];return t("readonly",r=>{(r.openKeyCursor||r.openCursor).call(r).onsuccess=function(){this.result&&(e.push(this.result.key),this.result.continue())}}).then(()=>e)}}}();
